// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.um.programacion2.ejemploprog2.domain;

import ar.edu.um.programacion2.ejemploprog2.domain.Negocio;
import ar.edu.um.programacion2.ejemploprog2.domain.NegocioDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect NegocioDataOnDemand_Roo_DataOnDemand {
    
    declare @type: NegocioDataOnDemand: @Component;
    
    private Random NegocioDataOnDemand.rnd = new SecureRandom();
    
    private List<Negocio> NegocioDataOnDemand.data;
    
    public Negocio NegocioDataOnDemand.getNewTransientNegocio(int index) {
        Negocio obj = new Negocio();
        setDomicilio(obj, index);
        setEmail(obj, index);
        setNya(obj, index);
        setTelefono(obj, index);
        return obj;
    }
    
    public void NegocioDataOnDemand.setDomicilio(Negocio obj, int index) {
        String domicilio = "domicilio_" + index;
        if (domicilio.length() > 30) {
            domicilio = domicilio.substring(0, 30);
        }
        obj.setDomicilio(domicilio);
    }
    
    public void NegocioDataOnDemand.setEmail(Negocio obj, int index) {
        String email = "foo" + index + "@bar.com";
        obj.setEmail(email);
    }
    
    public void NegocioDataOnDemand.setNya(Negocio obj, int index) {
        String nya = "nya_" + index;
        if (nya.length() > 20) {
            nya = nya.substring(0, 20);
        }
        obj.setNya(nya);
    }
    
    public void NegocioDataOnDemand.setTelefono(Negocio obj, int index) {
        int telefono = index;
        obj.setTelefono(telefono);
    }
    
    public Negocio NegocioDataOnDemand.getSpecificNegocio(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Negocio obj = data.get(index);
        Long id = obj.getId();
        return Negocio.findNegocio(id);
    }
    
    public Negocio NegocioDataOnDemand.getRandomNegocio() {
        init();
        Negocio obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Negocio.findNegocio(id);
    }
    
    public boolean NegocioDataOnDemand.modifyNegocio(Negocio obj) {
        return false;
    }
    
    public void NegocioDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Negocio.findNegocioEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Negocio' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Negocio>();
        for (int i = 0; i < 10; i++) {
            Negocio obj = getNewTransientNegocio(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
